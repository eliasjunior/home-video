{"ast":null,"code":"import _classCallCheck from \"/Users/eliasmj/Documents/GitHub/home-video/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/eliasmj/Documents/GitHub/home-video/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/eliasmj/Documents/GitHub/home-video/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/eliasmj/Documents/GitHub/home-video/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/eliasmj/Documents/GitHub/home-video/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/eliasmj/Documents/GitHub/home-video/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/eliasmj/Documents/GitHub/home-video/src/movie/Movie.js\";\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\nimport constants from '../constants';\nvar API_URL = constants.API_URL;\n\nvar Movie =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Movie, _React$Component);\n\n  function Movie(props) {\n    var _this;\n\n    _classCallCheck(this, Movie);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Movie).call(this, props));\n    _this.state = {\n      loadedFailed: false\n    };\n    _this.renderVideo = _this.renderVideo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onErrorHandle = _this.onErrorHandle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Movie, [{\n    key: \"onErrorHandle\",\n    value: function onErrorHandle() {\n      this.setState({\n        loadedFailed: true\n      });\n    }\n  }, {\n    key: \"renderVideo\",\n    value: function renderVideo() {\n      var location = this.props.location;\n      var pathname = location.pathname; //TODO: workaround for now\n\n      var partial = pathname.slice(pathname.indexOf('movie/') + 'movie/'.length);\n\n      if (this.state.loadedFailed) {\n        return React.createElement(\"div\", {\n          className: \"message-error\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, \"Video Failed to load\");\n      } else {\n        return React.createElement(\"video\", {\n          onError: this.onErrorHandle,\n          controls: true,\n          id: \"videoPlayer\",\n          width: \"620\",\n          autoPlay: true,\n          height: \"400\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(\"source\", {\n          src: API_URL + partial,\n          type: \"video/mp4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, this.renderVideo(), React.createElement(\"div\", {\n        className: \"btn-back\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/movies\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Back\"), \" \")));\n    }\n  }]);\n\n  return Movie;\n}(React.Component);\n\nexport default Movie;","map":{"version":3,"sources":["/Users/eliasmj/Documents/GitHub/home-video/src/movie/Movie.js"],"names":["React","Link","constants","API_URL","Movie","props","state","loadedFailed","renderVideo","bind","onErrorHandle","setState","location","pathname","partial","slice","indexOf","length","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,cAAtB;IACQC,O,GAAYD,S,CAAZC,O;;IAEFC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE;AADL,KAAb;AAGA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AACA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBD,IAAnB,uDAArB;AANe;AAOlB;;;;oCACe;AACZ,WAAKE,QAAL,CAAc;AAAEJ,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACH;;;kCACa;AAAA,UACFK,QADE,GACW,KAAKP,KADhB,CACFO,QADE;AAAA,UAEFC,QAFE,GAEWD,QAFX,CAEFC,QAFE,EAGV;;AACA,UAAMC,OAAO,GAAGD,QAAQ,CAACE,KAAT,CAAeF,QAAQ,CAACG,OAAT,CAAiB,QAAjB,IAA6B,SAASC,MAArD,CAAhB;;AAEA,UAAI,KAAKX,KAAL,CAAWC,YAAf,EAA6B;AACzB,eAAO;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAP;AACH,OAFD,MAEO;AACH,eAAO;AACH,UAAA,OAAO,EAAE,KAAKG,aADX;AAEH,UAAA,QAAQ,MAFL;AAGH,UAAA,EAAE,EAAC,aAHA;AAIH,UAAA,KAAK,EAAC,KAJH;AAKH,UAAA,QAAQ,EAAE,IALP;AAMH,UAAA,MAAM,EAAC,KANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOH;AAAQ,UAAA,GAAG,EAAEP,OAAO,GAAGW,OAAvB;AAAgC,UAAA,IAAI,EAAC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPG,CAAP;AASH;AACJ;;;6BACQ;AACL,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACF,KAAKN,WAAL,EADE,EAEH;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQ,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAR,MADJ,CAFG,CAAP;AAMH;;;;EAvCeR,KAAK,CAACkB,S;;AA0C1B,eAAed,KAAf","sourcesContent":["import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport constants from '../constants'\nconst { API_URL } = constants\n\nclass Movie extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            loadedFailed: false\n        }\n        this.renderVideo = this.renderVideo.bind(this);\n        this.onErrorHandle = this.onErrorHandle.bind(this);\n    }\n    onErrorHandle() {\n        this.setState({ loadedFailed: true })\n    }\n    renderVideo() {\n        const { location } = this.props;\n        const { pathname } = location;\n        //TODO: workaround for now\n        const partial = pathname.slice(pathname.indexOf('movie/') + 'movie/'.length)\n\n        if (this.state.loadedFailed) {\n            return <div className='message-error'>Video Failed to load</div>\n        } else {\n            return <video\n                onError={this.onErrorHandle}\n                controls\n                id=\"videoPlayer\"\n                width=\"620\"\n                autoPlay={true}\n                height=\"400\">\n                <source src={API_URL + partial} type=\"video/mp4\"></source>\n            </video>\n        }\n    }\n    render() {\n        return <div>\n            {this.renderVideo()}\n            <div className='btn-back'>\n                <button><Link to='/movies'>Back</Link> </button>\n            </div>\n        </div>\n    }\n}\n\nexport default Movie"]},"metadata":{},"sourceType":"module"}